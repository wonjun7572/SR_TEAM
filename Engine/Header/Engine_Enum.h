#ifndef Engine_Enum_h__
#define Engine_Enum_h__

namespace Engine
{
	enum WINMODE	 { MODE_FULL, MODE_WIN };
	
// ID_DYNAMIC : 매 프레임마다 갱신을 해야하는 컴포넌트 집단
// ID_STATIC : 한 번 만들면 그대로 사용할 컴포넌트 집단
	enum COMPONENTID { ID_DYNAMIC, ID_STATIC, ID_END };

	enum RENDERID { RENDER_PRIORITY, RENDER_MAPSETTING,  RENDER_NONALPHA, RENDER_ALPHA, RENDER_WORLDMAP, RENDER_MINIMAP, RENDER_UI, RENDER_END };

	enum INFOID { INFO_RIGHT, INFO_UP, INFO_LOOK, INFO_POS, INFO_END };

	enum ROTATIONID { ROT_X, ROT_Y, ROT_Z, ROT_END};

	enum TEXTUREID { TEX_NORMAL, TEX_CUBE, TEX_END };

	enum LOADINGID { LOADING_STAGE, LOADING_BOSS, LOADING_END };
	
	enum MOUSEKEYSTATE { DIM_LB, DIM_RB, DIM_MB, DIM_END };

	enum MOUSEMOVESTATE { DIMS_X, DIMS_Y, DIMS_Z, DIMS_END };

	enum CHANNELID { SOUND_EFFECT, SOUND_REFLECT, SOUND_BGM, SOUND_PLAYER, MAXCHANNEL };

	enum SKILLID { SKILL_SLOW, SKILL_DOUBLEGUN, SKILLEND };

	enum WALLCOLDIR { WALL_LEFT, WALL_RIGHT, WALL_FRONT, WALL_BACK, WALL_END, };

	enum ITEMID	 { ITEM_HP, ITEM_DEFENCE, ITEM_BULLET, ITEM_END };

	enum PLAYERSTATEID { PLAYER_WALK, PLAYER_STOP, PLAYER_END };
	enum PLAYERWALKID { PLAYERWALK_1, PLAYERWALK_2, PLAYERWALK_START, PLAYERWALK_END };
	enum PLAYERSTOPID { PLAYERSTOP_1, PLAYERSTOP_2, PLAYERSTOP_END };

	enum SLIMESTATEID { SLIME_JUMP, SLIME_END, };
	enum SLIMEJUMPID { SLIMEJUMP_START, SLIMEJUMP_1, SLIMEJUMP_2, SLIMEJUMP_END, };

	enum MONSTERSTATEID { MONSTER_WALK, MONSTER_STOP, MONSTER_END };
	enum MONSTERWALKID { MONSTERWALK_1, MONSTERWALK_2, MONSTERWALK_START, MONSTERWALK_END };
	enum MONSTERSTOPID { MONSTERSTOP_1, MONSTERSTOP_2, MONSTERSTOP_END };

	enum ILLUSIONERID {ILLUSIONER_WALK, ILLUSIONER_STOP, ILLUSIONER_END};

}

#endif // Engine_Enum_h__




